package com.nikola.qpstatus;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

import android.annotation.SuppressLint;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.AsyncTask;
import android.util.Log;

@SuppressLint("SdCardPath")
public class Update extends AsyncTask<String,Integer,Void>{
	
	private Context context;
	private String imeAplikacije;
	private int verzijaAplikacije;
	private int novaVerzijaAplikacije;
	private String urlVersion;
	private String urlApp;
	private ProgressDialog dialog;
	private boolean provjera;

	public Update(Context contextf, String name, int version, String urlApp, String urlVersion){
		setContext(contextf);
		setAppName(name);
		setAppVersion(version);
		setUrlApp(urlApp);
		setUrlVersion(urlVersion);
		Log.d("update", "kreiranje");
		this.provjera = true;
	}
	
	public void setContext(Context contextf){
	    context = contextf;
	}
	
	public void setAppName(String name){
	    imeAplikacije = name;
	}
	
	public void setAppVersion(int version){
	    verzijaAplikacije = version;
	}
	
	public void setUrlVersion(String urlVersion) {
		this.urlVersion = urlVersion;
	}

	public void setUrlApp(String urlApp) {
		this.urlApp = urlApp;
	}
	
	public boolean verzijaAplikacije(){
		try {
		    URL url = new URL(urlVersion);

		    BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));
		    String str;
		    while ((str = in.readLine()) != null) {
		    	if(str.indexOf("version") != -1){
		    		novaVerzijaAplikacije = Integer.parseInt(str.split("=")[1]);
		    		Log.d("verzija", str);
		    	}
		    }
		    in.close();
		    if(verzijaAplikacije < novaVerzijaAplikacije)
		    	return true;
		    else
		    	return false;
		} catch (Exception e) {
			e.printStackTrace();
			return false;
			//Log.e("Greska", e.getMessage());
		}
	}
	
    protected void onPreExecute() {
    	this.dialog = new ProgressDialog(context);
    	this.dialog.setMessage("Molim pricekajte, aplikacija se aÅ¾urira.");
    	this.dialog.setMax(100);
    	this.dialog.setProgress(0);
    	this.dialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
        this.dialog.show();
    }

	@SuppressLint("SdCardPath")
	@Override
	protected Void doInBackground(String... arg0) {
		Log.d("update", "pokretanje");
		verzijaAplikacije();
		if(verzijaAplikacije < novaVerzijaAplikacije){
			try {
				Log.d("update", "download");
	            URL url = new URL(urlApp);
	            HttpURLConnection c = (HttpURLConnection) url.openConnection();
	            c.setRequestMethod("GET");
	            //c.setDoOutput(true);
	            c.connect();
	            
	            int velicina = c.getContentLength();
	            publishProgress(0, velicina);

	            String PATH = "/mnt/sdcard/Download/";
	            File file = new File(PATH);
	            file.mkdirs();
	            File outputFile = new File(file, imeAplikacije);
	            if(outputFile.exists()){
	                outputFile.delete();
	            }
	            FileOutputStream fos = new FileOutputStream(outputFile);

	            InputStream is = c.getInputStream();
	            byte[] buffer = new byte[1024];
	            int len1 = 0;
	            int i = 0;
	            while ((len1 = is.read(buffer)) != -1) {
	                fos.write(buffer, 0, len1);
	                i++;
	                publishProgress(i, null);
	            }
	            fos.close();
	            is.close();

	            Intent intent = new Intent(Intent.ACTION_VIEW);
	            intent.setDataAndType(Uri.fromFile(new File("/mnt/sdcard/Download/" + imeAplikacije)), "application/vnd.android.package-archive");
	            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); // without this flag android returned a intent error!
	            context.startActivity(intent);

	        } catch (Exception e) {
	        	e.printStackTrace();
	            Log.e("UpdateAPP", "Update error! " + e.getMessage());
	        }
		}
    return null;
	}
	
	protected void onProgressUpdate(Integer... progress) {
		if(progress[1] != null)
			this.dialog.setMax(progress[1]/1024);
        this.dialog.setProgress(progress[0]);
        this.dialog.setProgressNumberFormat("%1d/%2d kb");
    }
	
	protected void onPostExecute(Void result){
	    	
	    	if (this.dialog.isShowing()) {
	        	this.dialog.dismiss();
	    	}
	}
	
	public void loopObavijestNovaVerzija(){
		while (provjera) {
			try {
				
				//Activity getCurrentActivity = (Activity) MyApp.getContext();
				//obavijestNovaVerzija(getCurrentActivity);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	}

}